{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\bbbra\\\\OneDrive\\\\Documents\\\\GitHub\\\\dark-mode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport { useEffect } from 'react';\nimport { useLocalStorage } from './useLocalStorage';\nvar darkModeBody = document.querySelector('body');\n\nvar useDarkMode = function useDarkMode() {\n  var _useLocalStorage = useLocalStorage('key'),\n      _useLocalStorage2 = _slicedToArray(_useLocalStorage, 2),\n      darkValue = _useLocalStorage2[0],\n      setDarkValue = _useLocalStorage2[1];\n\n  useEffect(function () {\n    if (useLocalStorage === true) {\n      darkModeBody.classList.add('dark-mode');\n    } else {\n      darkModeBody.classList.remove('dark-mode');\n    }\n  }, []);\n  return [darkValue, setDarkValue];\n};\n\nexport default useDarkMode;","map":{"version":3,"sources":["C:\\Users\\bbbra\\OneDrive\\Documents\\GitHub\\dark-mode\\src\\hooks\\useDarkMode.jsx"],"names":["useEffect","useLocalStorage","darkModeBody","document","querySelector","useDarkMode","darkValue","setDarkValue","classList","add","remove"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AAEA,SAASC,eAAT,QAAgC,mBAAhC;AAEA,IAAIC,YAAY,GAAGC,QAAQ,CAACC,aAAT,CAAuB,MAAvB,CAAnB;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AAAA,yBACYJ,eAAe,CAAC,KAAD,CAD3B;AAAA;AAAA,MACfK,SADe;AAAA,MACJC,YADI;;AAGtBP,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAGC,eAAe,KAAK,IAAvB,EAA6B;AACzBC,MAAAA,YAAY,CAACM,SAAb,CAAuBC,GAAvB,CAA2B,WAA3B;AACH,KAFD,MAEO;AACHP,MAAAA,YAAY,CAACM,SAAb,CAAuBE,MAAvB,CAA8B,WAA9B;AACH;AACJ,GANQ,EAMN,EANM,CAAT;AAQA,SAAM,CAACJ,SAAD,EAAYC,YAAZ,CAAN;AACH,CAZD;;AAcA,eAAeF,WAAf","sourcesContent":["import { useEffect } from 'react';\r\n\r\nimport { useLocalStorage } from './useLocalStorage'\r\n\r\nlet darkModeBody = document.querySelector('body')\r\n\r\nconst useDarkMode = () => {\r\n    const [darkValue, setDarkValue] = useLocalStorage('key')\r\n\r\n    useEffect(() => {\r\n        if(useLocalStorage === true) {\r\n            darkModeBody.classList.add('dark-mode')\r\n        } else {\r\n            darkModeBody.classList.remove('dark-mode')\r\n        }\r\n    }, [])\r\n\r\n    return[darkValue, setDarkValue]\r\n}\r\n\r\nexport default useDarkMode"]},"metadata":{},"sourceType":"module"}